2024-12-27 12:52:17,480 - __main__ - DEBUG - Current Python processes:
2024-12-27 12:52:18,369 - __main__ - DEBUG - PID: 16320, CMD: C:\Users\garrett.smith\Documents\GitHub\ARS_QC_TOOL\venv\Scripts\python.exe main_script.py
2024-12-27 12:52:18,507 - __main__ - DEBUG - PID: 35316, CMD: C:\Users\garrett.smith\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\python.exe main_script.py
2024-12-27 12:52:18,519 - __main__ - DEBUG - Starting subprocess call in check_windows_activation
2024-12-27 12:52:19,123 - __main__ - DEBUG - Completed subprocess call in check_windows_activation
2024-12-27 12:52:19,132 - tzlocal - DEBUG - Looking up time zone info from registry
2024-12-27 12:52:19,154 - __main__ - DEBUG - Starting subprocess call in get_display_info
2024-12-27 12:52:19,849 - __main__ - DEBUG - Completed subprocess call in get_display_info
2024-12-27 12:52:19,851 - __main__ - DEBUG - Starting subprocess call in check_dhcp_status
2024-12-27 12:52:19,887 - __main__ - DEBUG - Completed subprocess call in check_dhcp_status
2024-12-27 12:52:20,423 - __main__ - DEBUG - Executing PowerShell command: 
        $status = Get-MpComputerStatus | Select-Object -Property AMServiceEnabled,
            RealTimeProtectionEnabled,
            IoavProtectionEnabled,
            AntispywareEnabled,
            BehaviorMonitorEnabled
        $status | ConvertTo-Json
        
2024-12-27 12:52:24,542 - __main__ - DEBUG - Starting subprocess call in check_task_scheduler_status
2024-12-27 12:52:24,542 - __main__ - DEBUG - Executing PowerShell command: 
        $tasks = @{
            'Root' = Get-ScheduledTask | Where-Object { $_.TaskPath -eq '\' };
            'Sledgehammer' = Get-ScheduledTask | Where-Object { $_.TaskName -in ('LockFiles', 'WDU', 'Wub_task') };
            'WindowsUpdate' = Get-ScheduledTask | Where-Object { $_.TaskPath -like '*WindowsUpdate*' };
            'Defender' = Get-ScheduledTask | Where-Object { $_.TaskPath -like '*Windows Defender*' }
        }
        
        $formattedTasks = @{}
        foreach ($category in $tasks.Keys) {
            $formattedTasks[$category] = $tasks[$category] | ForEach-Object {
                @{
                    'Name' = $_.TaskName;
                    'State' = $(
                        if ($_.State -eq 'Ready') { '3 (Enabled)' }
                        elseif ($_.State -eq 'Disabled') { '1 (Disabled)' }
                        else { $_.State }
                    )
                }
            }
        }
        $formattedTasks | ConvertTo-Json -Depth 3
        
2024-12-27 12:52:26,317 - __main__ - DEBUG - Completed subprocess call in check_task_scheduler_status
